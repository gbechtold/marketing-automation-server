version: "3.8"
services:
  activepieces:
    image: activepieces/activepieces:latest
    container_name: activepieces
    restart: unless-stopped
    depends_on:
      - postgres
      - redis
    environment:
      - AP_ENCRYPTION_KEY=${AP_ENCRYPTION_KEY}
      - AP_JWT_SECRET=${AP_JWT_SECRET}
      - AP_FRONTEND_URL=${AP_FRONTEND_URL:-https://automation.example.com}
      - AP_POSTGRES_HOST=${AP_POSTGRES_HOST:-postgres}
      - AP_POSTGRES_PORT=${AP_POSTGRES_PORT:-5432}
      - AP_POSTGRES_DATABASE=${AP_POSTGRES_DATABASE:-activepieces}
      - AP_POSTGRES_USERNAME=${AP_POSTGRES_USERNAME:-activepieces}
      - AP_POSTGRES_PASSWORD=${AP_POSTGRES_PASSWORD:-activepieces}
      - AP_REDIS_HOST=${AP_REDIS_HOST:-redis}
      - AP_REDIS_PORT=${AP_REDIS_PORT:-6379}
      - AP_SIGN_UP_ENABLED=${AP_SIGN_UP_ENABLED:-true}
    expose:
      - "80"  # Internal port (ActivePieces uses 80 inside the container)
    networks:
      - activepieces
      - traefik-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.activepieces.rule=Host(`${AUTOMATION_DOMAIN:-automation.example.com}`)"
      - "traefik.http.routers.activepieces.entrypoints=websecure"
      - "traefik.http.routers.activepieces.tls=true"
      - "traefik.http.routers.activepieces.tls.certresolver=letsencrypt"
      - "traefik.http.services.activepieces.loadbalancer.server.port=80"

  postgres:
    image: postgres:14
    container_name: postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${AP_POSTGRES_DATABASE:-activepieces}
      - POSTGRES_PASSWORD=${AP_POSTGRES_PASSWORD:-activepieces}
      - POSTGRES_USER=${AP_POSTGRES_USERNAME:-activepieces}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - activepieces

  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    networks:
      - activepieces

networks:
  activepieces:
  traefik-net:
    external: true

volumes:
  postgres_data: